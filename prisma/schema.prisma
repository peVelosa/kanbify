generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
  schemas   = ["kanbify-v0"]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@schema("kanbify-v0")
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  password       String?
  accounts       Account[]
  boards         Board[]
  collaborations Collaborator[]

  @@schema("kanbify-v0")
}

model Board {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  owner_id      String
  title         String
  description   String?        @default("")
  owner         User           @relation(fields: [owner_id], references: [id], onDelete: Cascade)
  collaborators Collaborator[]
  columns       Column[]

  @@schema("kanbify-v0")
}

model Collaborator {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user_id   String
  board_id  String
  role      ROLE      @default(EMPLOYEE)
  cards     Card[]
  board     Board     @relation(fields: [board_id], references: [id], onDelete: Cascade)
  user      User      @relation(fields: [user_id], references: [id])
  comments  Comment[]
  tasks     Task[]

  @@unique([user_id, board_id], name: "Unique_Collaborator_User_Board")
  @@schema("kanbify-v0")
}

model Column {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  board_id  String
  title     String
  order     Int
  cards     Card[]
  board     Board    @relation(fields: [board_id], references: [id], onDelete: Cascade)

  @@schema("kanbify-v0")
}

model Card {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  column_id    String
  assign_to_id String?
  title        String
  body         String?
  order        Int
  assign_to    Collaborator? @relation(fields: [assign_to_id], references: [id], onDelete: Cascade)
  column       Column        @relation(fields: [column_id], references: [id])
  Comment      Comment[]
  tasks        Task[]

  @@schema("kanbify-v0")
}

model Task {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  assign_to_id String?
  card_id      String
  title        String
  done         Boolean       @default(false)
  assign_to    Collaborator? @relation(fields: [assign_to_id], references: [id], onDelete: Cascade)
  card         Card          @relation(fields: [card_id], references: [id])

  @@schema("kanbify-v0")
}

model Comment {
  id           String       @id @default(cuid())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  card_id      String
  assign_to_id String
  body         String
  assign_to    Collaborator @relation(fields: [assign_to_id], references: [id])
  card         Card         @relation(fields: [card_id], references: [id], onDelete: Cascade)

  @@schema("kanbify-v0")
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
  @@schema("kanbify-v0")
}

model Invite {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  expires     DateTime
  board_title String
  board_id    String   @unique

  @@unique([board_id, id])
  @@schema("kanbify-v0")
}

enum ROLE {
  OWNER
  ADMIN
  EMPLOYEE
  VISIT

  @@schema("kanbify-v0")
}
